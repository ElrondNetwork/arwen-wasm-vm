language: go
go: '1.13'
os:
- osx
arch:
- amd64
osx_image: xcode11.3
before_script:
- APP_VER=$(git describe --tags --long --dirty)
- APP_VER_SHORT=$(git describe --tags)
- GOOS=$(go env GOOS)
- GOARCH=$(go env GOARCH)
- ARCHIVE="elrond_""$APP_VER_SHORT""_""$GOOS""_""$GOARCH"".tgz"
script:
- GOOS=$(go env GOOS)
- GOARCH=$(go env GOARCH)

# In order to run the tests, use the absolute path to libwasmer
- if [[ "$GOOS" == darwin && "$GOARCH" == amd64 ]];
  then
    install_name_tool -id $TRAVIS_BUILD_DIR/wasmer/libwasmer_darwin_amd64.dylib $TRAVIS_BUILD_DIR/wasmer/libwasmer_darwin_amd64.dylib;
  fi

- make test-short

# For building, use a relative path to libwasmer
- if [[ "$GOOS" == darwin && "$GOARCH" == amd64 ]];
  then
    install_name_tool -id @executable_path/libwasmer_darwin_amd64.dylib $TRAVIS_BUILD_DIR/wasmer/libwasmer_darwin_amd64.dylib;
  fi

- go build -o "$TRAVIS_BUILD_DIR/build/arwen" -ldflags="-X main.appVersion=$APP_VER" $TRAVIS_BUILD_DIR/cmd/arwen
- go build -o "$TRAVIS_BUILD_DIR/build/arwendebug" -ldflags="-X main.appVersion=$APP_VER" $TRAVIS_BUILD_DIR/cmd/arwendebug
- go build -o "$TRAVIS_BUILD_DIR/build/test" -ldflags="-X main.appVersion=$APP_VER" $TRAVIS_BUILD_DIR/cmd/test

- if [[ "$GOOS" == linux && "$GOARCH" == amd64 ]]; then cp -f $TRAVIS_BUILD_DIR/wasmer/libwasmer_linux_amd64.so $TRAVIS_BUILD_DIR/build; fi
- if [[ "$GOOS" == darwin && "$GOARCH" == amd64 ]]; then cp -f $TRAVIS_BUILD_DIR/wasmer/libwasmer_darwin_amd64.dylib $TRAVIS_BUILD_DIR/build; fi

- echo $ARCHIVE

before_deploy:
- cd "$TRAVIS_BUILD_DIR/build"
- tar czvf "$TRAVIS_BUILD_DIR/$ARCHIVE" *
after_deploy:
- rm -rf "$TRAVIS_BUILD_DIR/build"
- rm -rf "$TRAVIS_BUILD_DIR/$ARCHIVE"
deploy:
  provider: s3
  access_key_id: $AWS_KEY_ID
  secret_access_key: $AWS_SECRET_KEY
  bucket: ide.elrond.com
  skip_cleanup: true
  glob: "$TRAVIS_BUILD_DIR/$ARCHIVE"
  on:
    branch: arwendebug

